@article{ServerlessApplicationsWhyWhenAndHow,
  author={Eismann, Simon and Scheuner, Joel and van Eyk, Erwin and Schwinger, Maximilian and Grohmann, Johannes and Herbst, Nikolas and Abad, Cristina L. and Iosup, Alexandru},
  journal={IEEE Software}, 
  title={Serverless Applications: Why, When, and How?}, 
  year={2021},
  volume={38},
  number={1},
  pages={32-39},
}

@article{ServerlessIsMoreFromPaaSToPresentCloudComputing,
  author={van Eyk, Erwin and Toader, Lucian and Talluri, Sacheendra and Versluis, Laurens and Uță, Alexandru and Iosup, Alexandru},
  journal={IEEE Internet Computing}, 
  title={Serverless is More: From PaaS to Present Cloud Computing}, 
  year={2018},
  volume={22},
  number={5},
  pages={8-17},
}

@article{KitchenhamProceduresSR,
author = {Kitchenham, Barbara},
year = {2004},
month = {08},
pages = {},
title = {Procedures for Performing Systematic Reviews},
volume = {33},
journal = {Keele, UK, Keele Univ.}
}

@article{doi:10.1177/0739456X17723971,
author = {Yu Xiao and Maria Watson},
title ={Guidance on Conducting a Systematic Literature Review},
journal = {Journal of Planning Education and Research},
volume = {39},
number = {1},
pages = {93-112},
year = {2019},
doi = {10.1177/0739456X17723971},
URL = {https://doi.org/10.1177/0739456X17723971},
eprint = {https://doi.org/10.1177/0739456X17723971}
}

@article{LEITNER2019340,
title = {A mixed-method empirical study of Function-as-a-Service software development in industrial practice},
journal = {Journal of Systems and Software},
volume = {149},
pages = {340-359},
year = {2019},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2018.12.013},
url = {https://www.sciencedirect.com/science/article/pii/S0164121218302735},
author = {Philipp Leitner and Erik Wittern and Josef Spillner and Waldemar Hummer},
keywords = {Cloud computing, Serverless, Function-as-a-Service, Empirical research},
abstract = {Function-as-a-Service (FaaS) describes cloud computing services that make infrastructure components transparent to application developers, thus falling in the larger group of “serverless” computing models. When using FaaS offerings, such as AWS Lambda, developers provide atomic and short-running code for their functions, and FaaS providers execute and horizontally scale them on-demand. Currently, there is no systematic research on how developers use serverless, what types of applications lend themselves to this model, or what architectural styles and practices FaaS-based applications are based on. We present results from a mixed-method study, combining interviews with practitioners who develop applications and systems that use FaaS, a systematic analysis of grey literature, and a Web-based survey. We find that successfully adopting FaaS requires a different mental model, where systems are primarily constructed by composing pre-existing services, with FaaS often acting as the “glue” that brings these services together. Tooling availability and maturity, especially related to testing and deployment, remains a major difficulty. Further, we find that current FaaS systems lack systematic support for function reuse, and abstractions and programming models for building non-trivial FaaS applications are limited. We conclude with a discussion of implications for FaaS providers, software developers, and researchers.}
}

@article{raza2021sok,
  title     = {{SoK: Function-As-A-Service: From An Application Developer’s Perspective}},
  author    = {Raza, A. and Matta, I. and Akhtar, N. and Kalavri, V. and Isahagian, V.},
  journal   = {Journal of Systems Research},
  volume    = {1},
  number    = {1},
  year      = {2021},
  doi       = {10.5070/SR31154815},
  url       = {https://escholarship.org/uc/item/1wg7h0qf}
}

@article{Ivanov_Petrova_2024, 
  title={Serverless Computing Architectures and Applications in AWS}, 
  volume={1}, 
  url={https://mzresearch.com/index.php/MZJAI/article/view/174}, 
  number={1}, 
  journal={MZ Journal of Artificial Intelligence}, 
  author={Ivanov , Dmitry and Petrova , Anna}, 
  year={2024}, 
  month={Jun.}, 
  pages={1-10}
}

@article{riseOfThePlanetOfServerlessComputing,
author = {Wen, Jinfeng and Chen, Zhenpeng and Jin, Xin and Liu, Xuanzhe},
title = {Rise of the Planet of Serverless Computing: A Systematic Review},
year = {2023},
volume = {32},
number = {5},
journal = {ACM Trans. Softw. Eng. Methodol.},
}

@ARTICLE{9754223,
  author={Kitchenham, Barbara and Madeyski, Lech and Budgen, David},
  journal={IEEE Transactions on Software Engineering}, 
  title={How Should Software Engineering Secondary Studies Include Grey Material?}, 
  year={2023},
  volume={49},
  number={2},
  pages={872-882},
  keywords={Social networking (online);Systematics;Software engineering;Guidelines;Blogs;Industries;Government;Evidence-based software engineering;systematic reviews;systematic mapping studies;mixed-methods reviews;grey literature;multivocal reviews},
  doi={10.1109/TSE.2022.3165938}}

@article{EBRAHIMI2024103115,
title = {Cold start latency mitigation mechanisms in serverless computing: Taxonomy, review, and future directions},
journal = {Journal of Systems Architecture},
volume = {151},
pages = {103115},
year = {2024},
issn = {1383-7621},
doi = {https://doi.org/10.1016/j.sysarc.2024.103115},
url = {https://www.sciencedirect.com/science/article/pii/S1383762124000523},
author = {Ana Ebrahimi and Mostafa Ghobaei-Arani and Hadi Saboohi},
keywords = {Serverless computing, Cold start, Function-as-a-Service, Performance, Benchmarking, Latency, Survey},
}

@inproceedings{9284261,
  author={Kelly, Daniel and Glavin, Frank and Barrett, Enda},
  booktitle={2020 IEEE 13th International Conference on Cloud Computing (CLOUD)}, 
  title={Serverless Computing: Behind the Scenes of Major Platforms}, 
  year={2020},
  volume={},
  number={},
  pages={304-312},
  keywords={Cloud computing;Conferences;Computer architecture;Interference;Servers;Resource management;Serverless Computing;Cloud Computing;Function-as-a-Service;Performance Measurement;Benchmarking},
  doi={10.1109/CLOUD49709.2020.00050}
}

@inproceedings{SpecRgCloudGroupVisionOnThePerformanceChallengesOfFaas,
author = {van Eyk, Erwin and Iosup, Alexandru and Abad, Cristina L. and Grohmann, Johannes and Eismann, Simon},
title = {A SPEC RG Cloud Group's Vision on the Performance Challenges of FaaS Cloud Architectures},
year = {2018},
isbn = {9781450356299},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3185768.3186308},
doi = {10.1145/3185768.3186308},
abstract = {As a key part of the serverless computing paradigm, Function-as-a-Service (FaaS) platforms enable users to run arbitrary functions without being concerned about operational issues. However, there are several performance-related issues surrounding the state-of-the-art FaaS platforms that can deter widespread adoption of FaaS, including sizeable overheads, unreliable performance, and new forms of the cost-performance trade-off. In this work we, the SPEC RG Cloud Group, identify six performance-related challenges that arise specifically in this FaaS model, and present our roadmap to tackle these problems in the near future. This paper aims at motivating the community to solve these challenges together.},
booktitle = {Companion of the 2018 ACM/SPEC International Conference on Performance Engineering},
pages = {21–24},
numpages = {4}
}

@INPROCEEDINGS{9235063,
  author={Quaresma, David and Fireman, Daniel and Pereira, Thiago Emmanuel},
  booktitle={2020 IEEE 32nd International Symposium on Computer Architecture and High Performance Computing (SBAC-PAD)}, 
  title={Controlling Garbage Collection and Request Admission to Improve Performance of FaaS Applications}, 
  year={2020},
  volume={},
  number={},
  pages={175-182},
  keywords={FAA;Time factors;Memory management;Cloud computing;Runtime environment;Load modeling;Java;serverless;faas;garbage collector;cold start;gci;cloud computing;cloud services},
  doi={10.1109/SBAC-PAD49847.2020.00033}
  }

@inproceedings{10.1145/3491204.3543506,
author = {Lambion, Danielle and Schmitz, Robert and Cordingly, Robert and Heydari, Navid and Lloyd, Wes},
title = {Characterizing X86 and ARM Serverless Performance Variation: A Natural Language Processing Case Study},
year = {2022},
isbn = {9781450391597},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3491204.3543506},
doi = {10.1145/3491204.3543506},
abstract = {In this paper, we leverage a Natural Language Processing (NLP) pipeline for topic modeling consisting of three functions for data preprocessing, model training, and inferencing to analyze serverless platform performance variation. Specifically, we investigated performance using x86_64 and ARM64 processors over a 24-hour day starting at midnight local time on four cloud regions across three continents on AWS Lambda. We identified public cloud resource contention by leveraging the CPU steal metric, and examined relationships to NLP pipeline runtime. Intel x86_64 Xeon processors at the same clock rate as ARM64 processors (Graviton 2) were more than 23\% faster for model training, but ARM64 processors were faster for data preprocessing and inferencing. Use of the Intel x86_64 architecture for the NLP pipeline was up to 33.4\% more expensive than ARM64 as a result of incentivized pricing from the cloud provider and slower pipeline runtime due to greater resource contention for Intel processors.},
booktitle = {Companion of the 2022 ACM/SPEC International Conference on Performance Engineering},
pages = {69–75},
numpages = {7},
keywords = {topic modeling, serverless computing, resource contention, performance variation, function-as-a-service},
location = {Bejing, China},
series = {ICPE '22}
}

@inproceedings{10.1145/3631295.3631394,
author = {Chen, Xinghan and Hung, Ling-Hong and Cordingly, Robert and Lloyd, Wes},
title = {X86 vs. ARM64: An Investigation of Factors Influencing Serverless Performance},
year = {2023},
isbn = {9798400704550},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3631295.3631394},
doi = {10.1145/3631295.3631394},
abstract = {Function-as-a-Service (FaaS) platforms enable easy deployment and hosting of code known as serverless functions and have gained considerable traction among software developers. Recently, Amazon has offered ARM64 processors as an alternative to x86 for hosting serverless functions on AWS Lambda. To encourage developers to migrate code to ARM64, use of ARM64 processors has been incentivized with a 20\% discount. In this paper, we investigate the implications of adopting ARM64 processors for hosting serverless functions. We deploy and benchmark 18 distinct serverless functions that stress a variety of system resources. Additionally, we scaled up the runtime for each of our functions by increasing the work they performed using 40 incremental steps to increase runtime from a few seconds to several minutes. We compared performance differences of x86 vs. ARM64 processors for our serverless function workoads and present our findings summarizing differences in: CPU utilization, function runtime, function runtime variation, and hosting costs. While only 7 of 18 functions ran faster on ARM64, 15 of 18 were less expensive thanks to the cloud provider discount. Performance variation on ARM64 processors was less than half compared to x86 processors potentially from the lack of hyperthreading and lower resource contention for ARM64 CPUs.},
booktitle = {Proceedings of the 9th International Workshop on Serverless Computing},
pages = {7–12},
numpages = {6},
keywords = {Serverless Computing, Performance, Function-as-a-Service, ARM},
location = {Bologna, Italy},
series = {WoSC '23}
}

@INPROCEEDINGS{8567674,
  author={Elgamal, Tarek and Sandur, Atul and Nahrstedt, Klara and Agha, Gul},
  booktitle={2018 IEEE/ACM Symposium on Edge Computing (SEC)}, 
  title={Costless: Optimizing Cost of Serverless Computing through Function Fusion and Placement}, 
  year={2018},
  volume={},
  number={},
  pages={300-312},
  keywords={Computational modeling;Fuses;Pricing;Cloud computing;Internet of Things;Memory management;Face;Serverless;Edge computing;AWS Lambda;Cloud Computing;Cost Optimization},
  doi={10.1109/SEC.2018.00029}
  }

@INPROCEEDINGS{9946331,
  author={Cordingly, Robert and Xu, Sonia and Lloyd, Wes},
  booktitle={2022 IEEE International Conference on Cloud Engineering (IC2E)}, 
  title={Function Memory Optimization for Heterogeneous Serverless Platforms with CPU Time Accounting}, 
  year={2022},
  volume={},
  number={},
  pages={104-115},
  keywords={Couplings;Costs;Runtime;Computational modeling;Memory management;Force;Throughput;Serverless Computing;Function-as-a-Service;Performance Evaluation;Performance Modeling},
  doi={10.1109/IC2E55432.2022.00019}
  }

@INPROCEEDINGS{8605773,
  author={Jackson, David and Clynch, Gary},
  booktitle={2018 IEEE/ACM International Conference on Utility and Cloud Computing Companion (UCC Companion)}, 
  title={An Investigation of the Impact of Language Runtime on the Performance and Cost of Serverless Functions}, 
  year={2018},
  volume={},
  number={},
  pages={154-160},
  keywords={Runtime;Measurement;Testing;Containers;Java;C# languages;Cloud computing;serverless;FaaS;Lambda;aws;azure;functions;performance;cloud},
  doi={10.1109/UCC-Companion.2018.00050}}

@INPROCEEDINGS{9191377,
  author={Vahidinia, Parichehr and Farahani, Bahar and Aliee, Fereidoon Shams},
  booktitle={2020 International Conference on Omni-layer Intelligent Systems (COINS)}, 
  title={Cold Start in Serverless Computing: Current Trends and Mitigation Strategies}, 
  year={2020},
  volume={},
  number={},
  pages={1-7},
  keywords={Containers;Delays;Cloud computing;Computational modeling;Libraries;Servers;Google;Cloud Computing;Serverless Computing;Function as a Service;Cold Start Delay;Serverless Computing Platforms},
  doi={10.1109/COINS49042.2020.9191377}}

@INPROCEEDINGS{8605777,
  author={Manner, Johannes and Endreß, Martin and Heckel, Tobias and Wirtz, Guido},
  booktitle={2018 IEEE/ACM International Conference on Utility and Cloud Computing Companion (UCC Companion)}, 
  title={Cold Start Influencing Factors in Function as a Service}, 
  year={2018},
  volume={},
  number={},
  pages={181-188},
  keywords={FAA;Containers;Benchmark testing;Cloud computing;Java;Pipelines;Serverless Computing, Function as a Service, FaaS, Cloud Functions, Cold Start, Benchmarking},
  doi={10.1109/UCC-Companion.2018.00054}}

@inproceedings{10.1145/3419111.3421280,
author = {Yu, Tianyi and Liu, Qingyuan and Du, Dong and Xia, Yubin and Zang, Binyu and Lu, Ziqian and Yang, Pingchao and Qin, Chenggang and Chen, Haibo},
title = {Characterizing serverless platforms with serverlessbench},
year = {2020},
isbn = {9781450381376},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3419111.3421280},
doi = {10.1145/3419111.3421280},
abstract = {Serverless computing promises auto-scalability and cost-efficiency (in "pay-as-you-go" manner) for high-productive software development. Because of its virtue, serverless computing has motivated increasingly new applications and services in the cloud. This, however, also presents new challenges including how to efficiently design high-performance serverless platforms and how to efficiently program on the platforms.This paper proposes ServerlessBench, an open-source benchmark suite for characterizing serverless platforms. It includes test cases exploring characteristic metrics of serverless computing, e.g., communication efficiency, startup latency, stateless overhead, and performance isolation. We have applied the benchmark suite to evaluate the most popular serverless computing platforms, including AWS Lambda, Open-Whisk, and Fn, and present new serverless implications from the study. For example, we show scenarios where decoupling an application into a composition of serverless functions can be beneficial in cost-saving and performance, and that the "stateless" property in serverless computing can hurt the execution performance of serverless functions. These implications form several design guidelines, which may help platform designers to optimize serverless platforms and application developers to design their functions best fit to the platforms.},
booktitle = {Proceedings of the 11th ACM Symposium on Cloud Computing},
pages = {30–44},
numpages = {15},
location = {Virtual Event, USA},
series = {SoCC '20}
}

@INPROCEEDINGS{9860368,
  author={Dantas, Jaime and Khazaei, Hamzeh and Litoiu, Marin},
  booktitle={2022 IEEE 15th International Conference on Cloud Computing (CLOUD)}, 
  title={Application Deployment Strategies for Reducing the Cold Start Delay of AWS Lambda}, 
  year={2022},
  volume={},
  number={},
  pages={1-10},
  keywords={Industries;Runtime;Web services;Computational modeling;Serverless computing;Benchmark testing;Software;AWS Lambda;Cold Start;Function as a Service;Serverless Computing;Performance Benchmark},
  doi={10.1109/CLOUD55607.2022.00016}}

@INPROCEEDINGS{8116416,
  author={Puripunpinyo, Hussachai and Samadzadeh, M.H.},
  booktitle={2017 IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS)}, 
  title={Effect of optimizing Java deployment artifacts on AWS Lambda}, 
  year={2017},
  volume={},
  number={},
  pages={438-443},
  keywords={Java;Libraries;Computer architecture;Tools;Servers;XML;Big Data;Serverless Architecture;Deployment;AWS Lambda;JVM;Java;Optimization;Performance},
  doi={10.1109/INFCOMW.2017.8116416}}

@INPROCEEDINGS{8605779,
  author={Lloyd, Wes and Vu, Minh and Zhang, Baojia and David, Olaf and Leavesley, George},
  booktitle={2018 IEEE/ACM International Conference on Utility and Cloud Computing Companion (UCC Companion)}, 
  title={Improving Application Migration to Serverless Computing Platforms: Latency Mitigation with Keep-Alive Workloads}, 
  year={2018},
  volume={},
  number={},
  pages={195-200},
  keywords={Cloud computing;FAA;Containers;Computational modeling;Java;Load management;Load modeling;Resource Management and Performance;Serverless Computing;Function-as-a-Service;Application Migration},
  doi={10.1109/UCC-Companion.2018.00056}}

@INPROCEEDINGS{8844428,
  author={Kaplunovich, Alex},
  booktitle={2019 IEEE/ACM 3rd International Workshop on Refactoring (IWoR)}, 
  title={ToLambda--Automatic Path to Serverless Architectures}, 
  year={2019},
  volume={},
  number={},
  pages={1-8},
  keywords={Cloud computing;Java;Computer architecture;Tools;Servers;Python;Market research;Serverless, Microservices, AWS, Cloud, Lambda, Automation, Refactoring, Transformation, FaaS, Parsing, Java, JavaScript, Node.js},
  doi={10.1109/IWoR.2019.00008}}

@inproceedings{10.1145/3458336.3465305,
author = {Carreira, Joao and Kohli, Sumer and Bruno, Rodrigo and Fonseca, Pedro},
title = {From warm to hot starts: leveraging runtimes for the serverless era},
year = {2021},
isbn = {9781450384384},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3458336.3465305},
doi = {10.1145/3458336.3465305},
abstract = {The serverless computing model leverages high-level languages, such as JavaScript and Java, to raise the level of abstraction for cloud programming. However, today's design of serverless computing platforms based on stateless short-lived functions leads to missed opportunities for modern runtimes to optimize serverless functions through techniques such as JIT compilation and code profiling.In this paper, we show that modern serverless platforms, such as AWS Lambda, do not fully leverage language runtime optimizations. We find that a significant number of function invocations running on warm containers are executed with unoptimized code (warm-starts), leading to orders of magnitude performance slowdowns.We explore the idea of exploiting the runtime knowledge spread throughout potentially thousands of nodes to profile and optimize code. To that end, we propose Ignite, a serverless platform that orchestrates runtimes across machines to run optimized code from the start (hot-start). We present evidence that runtime orchestration has the potential to greatly reduce cost and latency of serverless workloads by running optimized code across thousands of serverless functions.},
booktitle = {Proceedings of the Workshop on Hot Topics in Operating Systems},
pages = {58–64},
numpages = {7},
location = {Ann Arbor, Michigan},
series = {HotOS '21}
}

@INPROCEEDINGS{9095731,
  author={Nupponen, Jussi and Taibi, Davide},
  booktitle={2020 IEEE International Conference on Software Architecture Companion (ICSA-C)}, 
  title={Serverless: What it Is, What to Do and What Not to Do}, 
  year={2020},
  volume={},
  number={},
  pages={49-50},
  keywords={FAA;Cloud computing;Libraries;Tools;Servers;Complexity theory;Computer architecture;Serverless;Function-as-a-service;FaaS},
  doi={10.1109/ICSA-C50368.2020.00016}}

@INPROCEEDINGS{9912641,
  author={Taibi, Davide and Kehoe, Ben and Poccia, Danilo},
  booktitle={2022 IEEE International Conference on Service-Oriented System Engineering (SOSE)}, 
  title={Serverless: From Bad Practices to Good Solutions}, 
  year={2022},
  volume={},
  number={},
  pages={85-92},
  keywords={Industries;Codes;Service-oriented systems engineering;Microservice architectures;Serverless computing;Computer architecture;Guidelines;Microservices;serverless;function-as-a-service;cloud-native;anti-patterns;bad smells},
  doi={10.1109/SOSE55356.2022.00016}}

@INPROCEEDINGS{8605774,
  author={Kritikos, Kyriakos and Skrzypek, Paweł},
  booktitle={2018 IEEE/ACM International Conference on Utility and Cloud Computing Companion (UCC Companion)}, 
  title={A Review of Serverless Frameworks}, 
  year={2018},
  volume={},
  number={},
  pages={161-168},
  keywords={Cloud computing;Software;Testing;Computer languages;Runtime;Monitoring;Production;serverless, function-as-a-service, abstraction, provisioning, framework, review},
  doi={10.1109/UCC-Companion.2018.00051}}

@inproceedings{10.1145/3377812.3382135,
author = {Chatley, Robert and Allerton, Thomas},
title = {Nimbus: improving the developer experience for serverless applications},
year = {2020},
isbn = {9781450371223},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3377812.3382135},
doi = {10.1145/3377812.3382135},
abstract = {We present Nimbus, a framework for writing and deploying Java applications on a Function-as-a-Service ("serverless") platform. Nimbus aims to soothe four main pain points experienced by developers working on serverless applications: that testing can be difficult, that deployment can be a slow and painful process, that it is challenging to avoid vendor lock-in, and that long cold start times can introduce unwelcome latency to function invocations.Nimbus provides a number of features that aim to overcome these challenges when working with serverless applications. It uses an annotation-based configuration to avoid having to work with large configuration files. It aims to allow the code written to be cloud-agnostic. It provides an environment for local testing where the complete application can be run locally before deployment. Lastly, Nimbus provides mechanisms for optimising the contents and size of the artifacts that are deployed to the cloud, which helps to reduce both deployment times and cold start times.Video: https://www.youtube.com/watch?v=0nYchh8jdY4},
booktitle = {Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering: Companion Proceedings},
pages = {85–88},
numpages = {4},
keywords = {serverless, developer tools, developer experience},
location = {Seoul, South Korea},
series = {ICSE '20}
}

@INPROCEEDINGS{9732138,
  author={Nazari, Maziyar and Goodarzy, Sepideh and Keller, Eric and Rozner, Eric and Mishra, Shivakant},
  booktitle={2021 Eighth International Conference on Software Defined Systems (SDS)}, 
  title={Optimizing and Extending Serverless Platforms: A Survey}, 
  year={2021},
  volume={},
  number={},
  pages={1-8},
  keywords={Industries;Fault tolerance;Bibliographies;Fault tolerant systems;Serverless computing;Pricing;Elasticity;Serverless Computing;Function-as-a-Service;Cloud Computing;Optimization;Extension},
  doi={10.1109/SDS54264.2021.9732138}}

@INPROCEEDINGS{9027427,
  author={Ghosh, Bishakh Chandra and Addya, Sourav Kanti and Somy, Nishant Baranwal and Nath, Shubha Brata and Chakraborty, Sandip and Ghosh, Soumya K},
  booktitle={2020 International Conference on COMmunication Systems \& NETworkS (COMSNETS)}, 
  title={Caching Techniques to Improve Latency in Serverless Architectures}, 
  year={2020},
  volume={},
  number={},
  pages={666-669},
  keywords={Databases;Time factors;Computer architecture;Containers;Cloud computing;Servers;Data analysis;FaaS;Serverless Computing;Cloud Computing;Response Time},
  doi={10.1109/COMSNETS48256.2020.9027427}}

@INPROCEEDINGS{8513710,
  author={Bardsley, Daniel and Ryan, Larry and Howard, John},
  booktitle={2018 IEEE International Conference on Smart Cloud (SmartCloud)}, 
  title={Serverless Performance and Optimization Strategies}, 
  year={2018},
  volume={},
  number={},
  pages={19-26},
  keywords={Computer architecture;Logic gates;Servers;Time factors;Ecosystems;Monitoring;Computational modeling;serverless;aws;lambdas;architecture;performance},
  doi={10.1109/SmartCloud.2018.00012}}

@misc{serverlessArchitectureMarketReport,
  author = {Research and Markets},
  title = {Serverless Architecture Market Report 2025},
  year = {(2025)},
  note = {Dostęp 20.03.2025 z https://www.researchandmarkets.com/reports/5953253/serverless-architecture-market-report},
}

% jakoś dziwnie się generuje XD
@misc{awsLambdaDocs,
  author       = {Amazon Web Services},
  title        = {AWS Lambda Documentation},
  year         = {{2025}},
  note         = {Dostęp 21.03.2025 z https://docs.aws.amazon.com/lambda/latest/dg/}
}

@misc{awsEcsDevGuide,
  author       = {Amazon Web Services},
  title        = {Amazon ECS Developer Guide},
  year         = {{2025}},
  note         = {Dostęp 21.03.2025 z https://docs.aws.amazon.com/AmazonECS/latest/developerguide}
}

@misc{awsEc2Guide,
  author       = {Amazon Web Services},
  title        = {Amazon EC2 Documentation},
  year         = {{2025}},
  note         = {Dostęp 21.03.2025 z https://docs.aws.amazon.com/ec2/}
}

@misc{pawlik2019performanceconsiderationsexecutionlarge,
      title={Performance considerations on execution of large scale workflow applications on cloud functions}, 
      author={Maciej Pawlik and Kamil Figiela and Maciej Malawski},
      year={2019},
      eprint={1909.03555},
      archivePrefix={arXiv},
      primaryClass={cs.DC},
      url={https://arxiv.org/abs/1909.03555}, 
}

@misc{shrestha2019lambda,
author = {Shrestha, Sachin},
title = {Comparing Programming Languages used in AWS Lambda for Serverless Architecture},
year = {2019},
howpublished = {Bachelor's thesis, Theseus},
url = {https://www.theseus.fi/handle/10024/227117},
}

@misc{eismann2021reviewserverlessusecases,
      title={A Review of Serverless Use Cases and their Characteristics}, 
      author={Simon Eismann and Joel Scheuner and Erwin van Eyk and Maximilian Schwinger and Johannes Grohmann and Nikolas Herbst and Cristina L. Abad and Alexandru Iosup},
      year={2021},
      eprint={2008.11110},
      archivePrefix={arXiv},
      primaryClass={cs.SE},
      url={https://arxiv.org/abs/2008.11110}, 
}

@misc{cartaxo2020rapidreviewssoftwareengineering,
      title={Rapid Reviews in Software Engineering}, 
      author={Bruno Cartaxo and Gustavo Pinto and Sergio Soares},
      year={2020},
      eprint={2003.10006},
      archivePrefix={arXiv},
      primaryClass={cs.SE},
      url={https://arxiv.org/abs/2003.10006}, 
}

@misc{menéndez2023performancebestpracticesusing,
      title={Performance best practices using Java and AWS Lambda}, 
      author={Juan Mera Menéndez and Martin Bartlett},
      year={2023},
      eprint={2310.16510},
      archivePrefix={arXiv},
      primaryClass={cs.SE},
      url={https://arxiv.org/abs/2310.16510}, 
}

@misc{kehoe_serverless_2018,
  author       = {Kehoe, Ben},
  title        = {Serverless is a State of Mind},
  year         = {2018},
  url          = {https://ben11kehoe.medium.com/serverless-is-a-state-of-mind-717ef2088b42},
  note         = {Dostęp: 2025-04-28}
}

@online{cui2024serverless,
  author = {Yan Cui},
  title = {Should "serverless" just mean "function-as-a-service"?},
  year = {2024},
  month = {October},
  url = {https://theburningmonk.com/2024/10/should-serverless-just-mean-functions-as-a-service/},
  note = {Dostęp: 2025-04-28}
}


@CONFERENCE{Cordingly2020704,
	author = {Cordingly, Robert and Yu, Hanfei and Hoang, Varik and Perez, David and Foster, David and Sadeghi, Zohreh and Hatchett, Rashad and Lloyd, Wes J.},
	title = {Implications of Programming Language Selection for Serverless Data Processing Pipelines},
	year = {2020},
	journal = {Proceedings - IEEE 18th International Conference on Dependable, Autonomic and Secure Computing, IEEE 18th International Conference on Pervasive Intelligence and Computing, IEEE 6th International Conference on Cloud and Big Data Computing and IEEE 5th Cyber Science and Technology Congress, DASC/PiCom/CBDCom/CyberSciTech 2020},
	pages = {704 – 711},
	doi = {10.1109/DASC-PICom-CBDCom-CyberSciTech49142.2020.00120},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85097643570&doi=10.1109%2fDASC-PICom-CBDCom-CyberSciTech49142.2020.00120&partnerID=40&md5=6ba8219c9d3074d2cf8457077c211184},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 21}
}

@CONFERENCE{FerreiraDosSantos2023,
	author = {Ferreira Dos Santos, Paulo Otavio and Jorge De Moura Costa, Humberto and Leithardt, Valderi R. Q. and Jorge Silveira Ferreira, Paulo},
	title = {An Alternative to FaaS Cold Start Latency of Low Request Frequency Applications},
	year = {2023},
	journal = {International Conference on Electrical, Computer, Communications and Mechatronics Engineering, ICECCME 2023},
	doi = {10.1109/ICECCME57830.2023.10253389},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85174032097&doi=10.1109%2fICECCME57830.2023.10253389&partnerID=40&md5=e391b9aa0be19276d63880d17189cf69},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0}
}

@CONFERENCE{Cavalheiro202389,
	author = {Cavalheiro, Adriano Prado and Schepke, Claudio},
	title = {Exploring the Serverless First Strategy in Cloud Application Development},
	year = {2023},
	journal = {Proceedings - Symposium on Computer Architecture and High Performance Computing},
	pages = {89 – 94},
	doi = {10.1109/SBAC-PADW60351.2023.00023},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85178522391&doi=10.1109%2fSBAC-PADW60351.2023.00023&partnerID=40&md5=4e45e6bc8d77da46ffaecd9219c2533d},
	type = {Conference paper},
	publication_stage = {Final},
	source = {Scopus},
	note = {Cited by: 0}
}

@mastersthesis{ritzal2020optimizing,
  author       = {Ritzal, Roman},
  title        = {Optimizing Java for serverless applications},
  school       = {University of Applied Sciences FH Campus Wien},
  year         = {2020},
}
